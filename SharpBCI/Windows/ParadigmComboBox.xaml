<ComboBox x:Class="SharpBCI.Windows.ParadigmComboBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:windows="clr-namespace:SharpBCI.Windows"
             mc:Ignorable="d" 
             d:DesignHeight="25" d:DesignWidth="100">
    <ComboBox.Resources>
        <windows:MultiplyConverter x:Key="MultiplyConverter" />
        <ControlTemplate x:Key="RotatingArrowExpanderButtonTemplate" TargetType="{x:Type ToggleButton}"> 
            <Border x:Name="ExpanderButtonBorder" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="Transparent" Grid.ColumnSpan="2"/>
                    <Path x:Name="Arrow" Grid.Column="0" Data="M 1,1.5 L 4.5,5 8,1.5" Stroke="#FF666666" Width="10" Height="10" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                        RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <RotateTransform Angle="0"/>
                        </Path.RenderTransform>
                    </Path>
                    <ContentPresenter x:Name="HeaderContent" Grid.Column="1" Margin="4,0,0,0" ContentSource="Content"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <!-- MouseOver, Pressed behaviours-->
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Stroke" Value="#FF003366" TargetName="Arrow"/>
                </Trigger>
                <!-- Animate arrow when toggled-->
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="-90" Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="StretchyExpanderTemplate" TargetType="{x:Type Expander}">
            <DockPanel>
                <ToggleButton x:Name="ExpanderButton" DockPanel.Dock="Top"
                              Template="{StaticResource RotatingArrowExpanderButtonTemplate}" Content="{TemplateBinding Header}" 
                              FontSize="12" FontStyle="Italic" FontWeight="DemiBold" Foreground="LightSlateGray" VerticalAlignment="Center"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True" Padding="1.5,0" Margin="3"/>
                <ContentPresenter x:Name="ExpanderContent">
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform ScaleY="1"/>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)" To="0" Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="RevealExpanderTemplate" TargetType="{x:Type Expander}">
            <DockPanel>
                <ToggleButton x:Name="ExpanderButton" DockPanel.Dock="Top"
                              Template="{StaticResource RotatingArrowExpanderButtonTemplate}" Content="{TemplateBinding Header}" 
                              FontSize="12" FontStyle="Italic" FontWeight="DemiBold" Foreground="LightSlateGray" VerticalAlignment="Center"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True" Padding="1.5,0" Margin="3"/>
                <ScrollViewer x:Name="ExpanderContentScrollView" DockPanel.Dock="Bottom" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Bottom" >
                    <ScrollViewer.Tag>
                        <system:Double>1.0</system:Double>
                    </ScrollViewer.Tag>
                    <ScrollViewer.Height>
                        <MultiBinding Converter="{StaticResource MultiplyConverter}">
                            <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </ScrollViewer.Height>
                    <ContentPresenter x:Name="ExpanderContent" ContentSource="Content"/>
                </ScrollViewer>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView" Storyboard.TargetProperty="Tag" To="1" Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView" Storyboard.TargetProperty="Tag" To="0" Duration="0:0:0.4">
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ContainerStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <!--Here, we tell that each group of item will be placed under Expander control, and this expander control will by default will have style we defined in above code.-->
                        <Expander IsExpanded="True" x:Name="ComboExpander" Template="{StaticResource RevealExpanderTemplate}"
                                  Header="{TemplateBinding Content}" 
                                  HeaderTemplate="{TemplateBinding ContentTemplate}"
                                  HorizontalAlignment="Stretch">
                            <ItemsPresenter />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ComboBox.Resources>
    <ComboBox.GroupStyle>
        <GroupStyle ContainerStyle="{StaticResource ContainerStyle}">
            <GroupStyle.HeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}" FontSize="14" FontStyle="Italic" FontWeight="DemiBold" Foreground="LightSlateGray" VerticalAlignment="Center" />
                </DataTemplate>
            </GroupStyle.HeaderTemplate>
        </GroupStyle>
    </ComboBox.GroupStyle>
</ComboBox>
